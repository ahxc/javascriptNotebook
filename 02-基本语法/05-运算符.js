/* 算术运算符 */
true+1;/* 2 */
true+false;/* 1，算数运算中true为1，false为0 */
'123'+'456';/* '123456 */
1+null;/* 1 */
1+NaN;/* NaN，任何值和NaN做运算都是NaN */ */
console.log(1+'2');/* '12' */

/* 一元运算符-+省略 */

/* 自增自减 */
a=1;
a++;/* 赋值为原值 */
a++;/* 赋值为新值 */

/* 逻辑运算符 */
/* || && ! */
const a = "123"
!!a/* 可以对任意一个元素取反两次，转为布尔值，其布尔型不变 */

/* 赋值运算符 */
/* =，+=，-=，*=，/=，%=求余 */

/* 关系运算符 */
/* =，>=，<=，==等号和下面区别在与会做自动类型转换变为同等类型 */
/* 全等===，会做类型判别，类型不同则不考虑值直接false */
/* 不全等!==，会做类型判别，类型不同则不考虑值直接true */

/* 条件运算符 */
/* 条件 ? 事务1 : 事务2 */

/* 运算符的优先级 */
const a,b,c,d=1,e=2,f=3
/* 优先级相同则从左往右，最好使用括号保证运算顺序 */